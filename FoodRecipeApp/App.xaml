<Application x:Class="FoodRecipeApp.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:FoodRecipeApp"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:converters="http://metro.mahapps.com/winfx/xaml/shared"
             ShutdownMode="OnLastWindowClose">
    <Application.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<!-- MahApps.Metro resource dictionaries. Make sure that all file names are Case Sensitive! -->
				<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
				<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
				<!-- Theme setting -->
				<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/Light.Pink.xaml" />
				<!--For Navigation Menu-->
				<ResourceDictionary Source="pack://application:,,,/LoadingIndicators.WPF;component/Styles/LoadingDoubleBounce.xaml"/>
				<ResourceDictionary Source="pack://application:,,,/LoadingIndicators.WPF;component/Styles.xaml"/>
				<!--Material Design-->
				<materialDesign:BundledTheme BaseTheme="Light" PrimaryColor="DeepPurple" SecondaryColor="Lime" />
				<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
			</ResourceDictionary.MergedDictionaries>

			<Style x:Key="PageStyle"
			       BasedOn="{StaticResource MahApps.Styles.Page}"
			       TargetType="{x:Type Page}">
				<Setter Property="Background" Value="Transparent" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Page}">
							<Grid Background="{TemplateBinding Background}">
								<Grid.RowDefinitions>
									<RowDefinition Height="*" />
									<RowDefinition Height="Auto" />
								</Grid.RowDefinitions>
								<ContentPresenter Grid.Row="0" />
								<TextBlock Grid.Row="1"
								           Margin="4"
								           FontSize="40"
										   Foreground="White"
										   FontFamily="Segoe UI Light"
								           Text="{TemplateBinding Title}" />
							</Grid>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<Style x:Key="LargeTileStyle" TargetType="mah:Tile">
				<Setter Property="Width" Value="300" />
				<Setter Property="Height" Value="225" />
				<Setter Property="TitleFontSize" Value="10" />
			</Style>

			<Style x:Key="SmallTileStyle" TargetType="mah:Tile">
				<Setter Property="Width" Value="147" />
				<Setter Property="Height" Value="125" />
				<Setter Property="TitleFontSize" Value="10" />
			</Style>
			<Style x:Key="CustomLightMinButtonStyle"
		       BasedOn="{StaticResource MahApps.Styles.Button.MetroWindow.Light}"
		       TargetType="{x:Type Button}">
				<Setter Property="Background" Value="{StaticResource MahApps.Brushes.Accent}" />
				<Style.Triggers>
					<Trigger Property="IsMouseOver" Value="True">
						<Setter Property="Background" Value="DarkGreen" />
						<Setter Property="Foreground" Value="White" />
					</Trigger>
					<Trigger Property="IsPressed" Value="True">
						<Setter Property="Background" Value="Green" />
					</Trigger>
				</Style.Triggers>
			</Style>
			<Style x:Key="CustomDarkMinButtonStyle"
               BasedOn="{StaticResource MahApps.Styles.Button.MetroWindow.Dark}"
               TargetType="{x:Type Button}">
				<Setter Property="Background" Value="{StaticResource MahApps.Brushes.Accent}" />
				<Style.Triggers>
					<Trigger Property="IsMouseOver" Value="True">
						<Setter Property="Background" Value="DarkGreen" />
						<Setter Property="Foreground" Value="White" />
					</Trigger>
					<Trigger Property="IsPressed" Value="True">
						<Setter Property="Background" Value="Green" />
					</Trigger>
				</Style.Triggers>
			</Style>

			<Style x:Key="CustomLightMaxButtonStyle"
               BasedOn="{StaticResource MahApps.Styles.Button.MetroWindow.Light}"
               TargetType="{x:Type Button}">
				<Style.Triggers>
					<Trigger Property="IsMouseOver" Value="True">
						<Setter Property="Background" Value="DarkGoldenrod" />
						<Setter Property="Foreground" Value="White" />
					</Trigger>
					<Trigger Property="IsPressed" Value="True">
						<Setter Property="Background" Value="Yellow" />
						<Setter Property="Foreground" Value="Black" />
					</Trigger>
				</Style.Triggers>
			</Style>
			<Style x:Key="CustomDarkMaxButtonStyle"
               BasedOn="{StaticResource MahApps.Styles.Button.MetroWindow.Dark}"
               TargetType="{x:Type Button}">
				<Style.Triggers>
					<Trigger Property="IsMouseOver" Value="True">
						<Setter Property="Background" Value="DarkGoldenrod" />
						<Setter Property="Foreground" Value="White" />
					</Trigger>
					<Trigger Property="IsPressed" Value="True">
						<Setter Property="Background" Value="Yellow" />
						<Setter Property="Foreground" Value="Black" />
					</Trigger>
				</Style.Triggers>
			</Style>

			<Style x:Key="CustomLightCloseButtonStyle"
               BasedOn="{StaticResource MahApps.Styles.Button.MetroWindow.Close.Light.Win10}"
               TargetType="{x:Type Button}">
				<Style.Triggers>
					<Trigger Property="IsMouseOver" Value="True">
						<Setter Property="Background" Value="DarkRed" />
						<Setter Property="Foreground" Value="White" />
					</Trigger>
					<Trigger Property="IsPressed" Value="True">
						<Setter Property="Background" Value="Red" />
					</Trigger>
				</Style.Triggers>
			</Style>
			<Style x:Key="CustomDarkCloseButtonStyle"
               BasedOn="{StaticResource MahApps.Styles.Button.MetroWindow.Close.Dark.Win10}"
               TargetType="{x:Type Button}">
				<Style.Triggers>
					<Trigger Property="IsMouseOver" Value="True">
						<Setter Property="Background" Value="DarkRed" />
						<Setter Property="Foreground" Value="White" />
					</Trigger>
					<Trigger Property="IsPressed" Value="True">
						<Setter Property="Background" Value="Red" />
					</Trigger>
				</Style.Triggers>
			</Style>


		</ResourceDictionary>
	</Application.Resources>
</Application>
