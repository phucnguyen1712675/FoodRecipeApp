<mah:MetroWindow
	x:Class="FoodRecipeApp.GUI.HomeScreen"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
	xmlns:local="clr-namespace:FoodRecipeApp"
	xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:viewModels="clr-namespace:FoodRecipeApp.ViewModels"
	Title="FOOD RECIPE APP"
	Width="1140"
	Height="540"
	BorderThickness="1"
	GlowBrush="{DynamicResource MahApps.Brushes.Accent}"
	ResizeMode="NoResize"
	WindowStartupLocation="CenterScreen"
	WindowState="Maximized"
	mc:Ignorable="d">

	<!--<Window.Background>
		<ImageBrush ImageSource="/Resources/HomeSrceen_Background.png" Stretch="UniformToFill"/>
	</Window.Background>-->

	<controls:MetroWindow.DataContext>
		<viewModels:ShellViewModel />
	</controls:MetroWindow.DataContext>

	<mah:MetroWindow.Resources>
		<!--  New  -->
		<DataTemplate x:Key="MenuItemTemplate" DataType="{x:Type viewModels:MenuItem}">
			<Grid Height="48">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type mah:HamburgerMenu}}, Path=CompactPaneLength, Mode=OneWay}" />
					<ColumnDefinition />
				</Grid.ColumnDefinitions>
				<ContentControl
					Grid.Column="0"
					HorizontalAlignment="Center"
					VerticalAlignment="Center"
					Content="{Binding Icon}"
					Focusable="False" />
				<TextBlock
					Grid.Column="1"
					VerticalAlignment="Center"
					FontSize="16"
					Text="{Binding Label}" />
			</Grid>
		</DataTemplate>

		<Style BasedOn="{StaticResource {x:Type Frame}}" TargetType="{x:Type Frame}">
			
			<Setter Property="ClipToBounds" Value="True" />
			<Setter Property="ContentTemplate">
				<Setter.Value>
					<DataTemplate>
						<mah:TransitioningContentControl
							Content="{Binding}"
							RestartTransitionOnContentChange="True"
							Transition="Custom">
							<mah:TransitioningContentControl.CustomVisualStates>
								<VisualState x:Name="CustomTransition">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames
											BeginTime="00:00:00"
											Storyboard.TargetName="CurrentContentPresentationSite"
											Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
											<SplineDoubleKeyFrame KeyTime="00:00:00.150" Value="1" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames
											BeginTime="00:00:00"
											Storyboard.TargetName="CurrentContentPresentationSite"
											Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
											<SplineDoubleKeyFrame KeyTime="00:00:00" Value="200" />
											<SplineDoubleKeyFrame
												KeySpline="0.1, 0.9, 0.2, 1"
												KeyTime="00:00:00.300"
												Value="0" />
										</DoubleAnimationUsingKeyFrames>

										<DoubleAnimationUsingKeyFrames
											BeginTime="00:00:00"
											Storyboard.TargetName="PreviousContentPresentationSite"
											Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</mah:TransitioningContentControl.CustomVisualStates>
						</mah:TransitioningContentControl>
					</DataTemplate>
				</Setter.Value>
			</Setter>
		</Style>

	</mah:MetroWindow.Resources>

	<mah:MetroWindow.WindowButtonCommands>
		<mah:WindowButtonCommands
			Close="Noooo... don't close me!"
			DarkCloseButtonStyle="{StaticResource CustomDarkCloseButtonStyle}"
			DarkMaxButtonStyle="{StaticResource CustomDarkMaxButtonStyle}"
			DarkMinButtonStyle="{StaticResource CustomDarkMinButtonStyle}"
			LightCloseButtonStyle="{StaticResource CustomLightCloseButtonStyle}"
			LightMaxButtonStyle="{StaticResource CustomLightMaxButtonStyle}"
			LightMinButtonStyle="{StaticResource CustomLightMinButtonStyle}"
			Maximize="Maximize the window"
			Minimize="A custom Tooltip which will be shown on Min button"
			Restore="Restore the window" />
	</mah:MetroWindow.WindowButtonCommands>

	<mah:MetroWindow.LeftWindowCommands>
		<controls:WindowCommands ShowSeparators="False">
			<Button
				x:Name="GoBackButton"
				Width="{Binding ElementName=HamburgerMenuControl, Path=CompactPaneLength}"
				AutomationProperties.Name="Go back"
				Click="GoBackButton_OnClick">
				<controls:FontIcon
					AutomationProperties.Name="Go back icon"
					FontSize="14"
					Glyph="&#xE72B;" />
			</Button>
		</controls:WindowCommands>
	</mah:MetroWindow.LeftWindowCommands>

	<mah:MetroWindow.RightWindowCommands>
		<mah:WindowCommands>
			<Button Click="ChangeAppStyleButtonClick">
				<StackPanel Orientation="Horizontal">
					<iconPacks:PackIconModern
						Width="24"
						Height="24"
						Kind="FoodCupcake" />
					<TextBlock
						Margin="4,0,0,0"
						VerticalAlignment="Center"
						Text="Change App Style..." />
				</StackPanel>
			</Button>
		</mah:WindowCommands>
	</mah:MetroWindow.RightWindowCommands>

	<DockPanel>
		<controls:HamburgerMenu
			x:Name="HamburgerMenuControl"
			DisplayMode="CompactInline"
			IsPaneOpen="False"
			ItemInvoked="HamburgerMenuControl_OnItemInvoked"
			ItemTemplate="{StaticResource MenuItemTemplate}"
			ItemsSource="{Binding Menu}"
			OptionsItemTemplate="{StaticResource MenuItemTemplate}"
			OptionsItemsSource="{Binding OptionsMenu}" />

	</DockPanel>
</mah:MetroWindow>
